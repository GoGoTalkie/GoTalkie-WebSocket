name: Build and Deploy to Cloud Run

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  id-token: write

env:
  PROJECT_ID: swdevprac
  REGION: asia-southeast1
  SERVICE: gogotalkie
  REPO: cloud-run-source-deploy
  WORKLOAD_IDENTITY_PROVIDER: 'projects/898222558375/locations/global/workloadIdentityPools/github-actions/providers/github'
  SERVICE_ACCOUNT: 'github-action@swdevprac.iam.gserviceaccount.com'
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v3
        with:
          project_id: ${{ env.PROJECT_ID }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
          token_format: 'access_token'
          
      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker to use Artifact Registry
        run: gcloud auth configure-docker ${{env.REGION}}-docker.pkg.dev

      - name: Docker Auth
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGION }}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build and Push Container
        env:
          IMAGE: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.SERVICE }}:${{ github.sha }}
        run: |
          echo "IMAGE=${IMAGE}"
          docker build --tag "${IMAGE}" .
          docker push "${IMAGE}"
          echo "IMAGE=${IMAGE}" >> "$GITHUB_ENV"

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.SERVICE }}:${{ github.sha }}

      - name: Show output
        run: echo ${{ steps.deploy.outputs.url }}
